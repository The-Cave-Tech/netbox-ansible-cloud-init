---
- name: Make the first API call with username and password
  uri:
    url: https://localhost/api/users/tokens/provision/
    method: POST
    body_format: json
    validate_certs: no
    body: 
      username: "{{ netbox_username }}"
      password: "{{ netbox_admin_password}}"
    return_content: yes
  register: response

- name: Extract the token from the response
  set_fact:
    generated_token: "{{ response.json.key }}"

# - name: Generate Python script from template
#   template:
#     src: generate_token.py.j2
#     dest: /tmp/generated_script.py

# - name: Install pynetbox
#   command: /opt/netbox/venv/bin/pip install pynetbox

# - name: Run the Python script
#   command: /opt/netbox/venv/bin/python /tmp/generated_script.py
#   register: script_output

# - name: Store trimmed output in variable
#   set_fact:
#     generated_token: "{{ script_output.stdout | trim }}"

- name: Show token
  debug:
    msg: "Token : {{ generated_token }}"

# - name: Delete the Python script
#   file:
#     path: /tmp/generated_script.py
#     state: absent

- name: Install required packages
  apt:
    name:
      - python3-virtualenv
    state: present

- name: Clone Device-Type-Library-Import repository
  git:
    repo: 'https://github.com/netbox-community/Device-Type-Library-Import.git'
    dest: '/tmp/device-type-library-import'
    clone: yes
    update: yes

- name: Generate environment
  template:
    src: env.j2
    dest: /tmp/device-type-library-import/.env

- name: Install requirements using pip
  pip:
    requirements: '/tmp/device-type-library-import/requirements.txt'
    virtualenv: '/tmp/device-type-library-import/Device-Type-Library-Import'

- name: Run the import script
  shell:
    /tmp/device-type-library-import/Device-Type-Library-Import/bin/python ./nb-dt-import.py
  args:
    chdir: '/tmp/device-type-library-import'
  environment:
    PATH: "{{ ansible_env.PATH }}:/tmp/device-type-library-import/Device-Type-Library-Import"