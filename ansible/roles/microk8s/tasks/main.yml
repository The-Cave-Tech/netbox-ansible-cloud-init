---
- name: Extract hostname from FQDN
  set_fact:
    hostname_only: "{{ inventory_hostname.split('.')[0] }}"

- name: Install required packages
  apt:
    name: ['snapd', 'curl']
    state: present

- name: Install MicroK8s via Snap
  shell: snap install microk8s --classic

- name: Wait for the microk8s cluster to be ready
  shell: microk8s status --wait-ready

- name: Get existing nodes in the cluster
  shell: microk8s kubectl get nodes -o json
  register: existing_nodes
  when: inventory_hostname == ansible_play_hosts[0]

- name: Create a list of existing node names
  set_fact:
    existing_node_names: "{{ existing_nodes.stdout | from_json | json_query('items[].metadata.name') }}"
  when: inventory_hostname == ansible_play_hosts[0]

- name: Display existing node names
  debug:
    var: existing_node_names
  when: inventory_hostname == ansible_play_hosts[0]

- name: Create a list of non-joined hosts
  set_fact:
    non_joined_hosts: "{{ ansible_play_hosts | map('regex_replace', '^([^.]+)\\..*$', '\\1') | difference(existing_node_names) }}"
  when: inventory_hostname == ansible_play_hosts[0]

- name: Display non-joined hosts
  debug:
    var: non_joined_hosts
  when: inventory_hostname == ansible_play_hosts[0]

- name: Provision a host in the microk8s cluster
  shell: microk8s add-node --format json
  args:
    executable: /bin/bash
  register: cluster_add_result
  with_items: "{{ non_joined_hosts }}"
  when: inventory_hostname == ansible_play_hosts[0]

- name: Set join url fact
  set_fact:
    join_token: "{{ hostvars[ansible_play_hosts[0]].cluster_add_result.results | selectattr('item', 'equalto', hostname_only) | map(attribute='stdout') | first | from_json | json_query('urls') | first }}"
  when: hostname_only in hostvars[ansible_play_hosts[0]].non_joined_hosts

- name: Debug the join token
  debug:
    var: join_token
  when: hostname_only in hostvars[ansible_play_hosts[0]].non_joined_hosts

- name: Join the nodes to the microk8s cluster
  shell: microk8s join {{ join_token }}
  args:
    executable: /bin/bash
  when: hostname_only in hostvars[ansible_play_hosts[0]].non_joined_hosts

- name: Wait until all nodes appear in the kubernetes cluster as seen from the primary node
  shell: microk8s kubectl get nodes -o json
  register: nodes
  until: (nodes.stdout | from_json | json_query('items[].metadata.name') | difference(existing_node_names) | difference(non_joined_hosts)) | length == 0
  retries: 10
  delay: 10
  when: inventory_hostname == ansible_play_hosts[0]